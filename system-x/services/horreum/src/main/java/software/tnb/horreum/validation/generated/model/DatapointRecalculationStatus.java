/*
 * Horreum API
 * Horreum data repository API
 *
 * The version of the OpenAPI document: 0.1-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.tnb.horreum.validation.generated.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * DatapointRecalculationStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-12T10:19:43.430893315+02:00[Europe/Rome]")
public class DatapointRecalculationStatus {
    public static final String SERIALIZED_NAME_PERCENTAGE = "percentage";
    public static final String SERIALIZED_NAME_DONE = "done";
    public static final String SERIALIZED_NAME_TOTAL_DATASETS = "totalDatasets";
    public static final String SERIALIZED_NAME_ERRORS = "errors";
    public static final String SERIALIZED_NAME_DATASETS_WITHOUT_VALUE = "datasetsWithoutValue";
    @SerializedName(SERIALIZED_NAME_PERCENTAGE)
    private Integer percentage;
    @SerializedName(SERIALIZED_NAME_DONE)
    private Boolean done;
    @SerializedName(SERIALIZED_NAME_TOTAL_DATASETS)
    private Integer totalDatasets;
    @SerializedName(SERIALIZED_NAME_ERRORS)
    private Integer errors;
    @SerializedName(SERIALIZED_NAME_DATASETS_WITHOUT_VALUE)
    private List<DatasetInfo> datasetsWithoutValue = new ArrayList<DatasetInfo>();

    public DatapointRecalculationStatus() {
    }

    public DatapointRecalculationStatus percentage(Integer percentage) {

        this.percentage = percentage;
        return this;
    }

    /**
     * Get percentage
     *
     * @return percentage
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public Integer getPercentage() {
        return percentage;
    }

    public void setPercentage(Integer percentage) {
        this.percentage = percentage;
    }

    public DatapointRecalculationStatus done(Boolean done) {

        this.done = done;
        return this;
    }

    /**
     * Get done
     *
     * @return done
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public Boolean getDone() {
        return done;
    }

    public void setDone(Boolean done) {
        this.done = done;
    }

    public DatapointRecalculationStatus totalDatasets(Integer totalDatasets) {

        this.totalDatasets = totalDatasets;
        return this;
    }

    /**
     * Get totalDatasets
     *
     * @return totalDatasets
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getTotalDatasets() {
        return totalDatasets;
    }

    public void setTotalDatasets(Integer totalDatasets) {
        this.totalDatasets = totalDatasets;
    }

    public DatapointRecalculationStatus errors(Integer errors) {

        this.errors = errors;
        return this;
    }

    /**
     * Get errors
     *
     * @return errors
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getErrors() {
        return errors;
    }

    public void setErrors(Integer errors) {
        this.errors = errors;
    }

    public DatapointRecalculationStatus datasetsWithoutValue(List<DatasetInfo> datasetsWithoutValue) {

        this.datasetsWithoutValue = datasetsWithoutValue;
        return this;
    }

    public DatapointRecalculationStatus addDatasetsWithoutValueItem(DatasetInfo datasetsWithoutValueItem) {
        this.datasetsWithoutValue.add(datasetsWithoutValueItem);
        return this;
    }

    /**
     * Get datasetsWithoutValue
     *
     * @return datasetsWithoutValue
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public List<DatasetInfo> getDatasetsWithoutValue() {
        return datasetsWithoutValue;
    }

    public void setDatasetsWithoutValue(List<DatasetInfo> datasetsWithoutValue) {
        this.datasetsWithoutValue = datasetsWithoutValue;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DatapointRecalculationStatus datapointRecalculationStatus = (DatapointRecalculationStatus) o;
        return Objects.equals(this.percentage, datapointRecalculationStatus.percentage) &&
            Objects.equals(this.done, datapointRecalculationStatus.done) &&
            Objects.equals(this.totalDatasets, datapointRecalculationStatus.totalDatasets) &&
            Objects.equals(this.errors, datapointRecalculationStatus.errors) &&
            Objects.equals(this.datasetsWithoutValue, datapointRecalculationStatus.datasetsWithoutValue);
    }

    @Override
    public int hashCode() {
        return Objects.hash(percentage, done, totalDatasets, errors, datasetsWithoutValue);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DatapointRecalculationStatus {\n");
        sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
        sb.append("    done: ").append(toIndentedString(done)).append("\n");
        sb.append("    totalDatasets: ").append(toIndentedString(totalDatasets)).append("\n");
        sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
        sb.append("    datasetsWithoutValue: ").append(toIndentedString(datasetsWithoutValue)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

