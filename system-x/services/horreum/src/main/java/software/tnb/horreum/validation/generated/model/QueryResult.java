/*
 * Horreum API
 * Horreum data repository API
 *
 * The version of the OpenAPI document: 0.1-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.tnb.horreum.validation.generated.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * QueryResult
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-12T10:19:43.430893315+02:00[Europe/Rome]")
public class QueryResult {
    public static final String SERIALIZED_NAME_VALID = "valid";
    public static final String SERIALIZED_NAME_JSONPATH = "jsonpath";
    public static final String SERIALIZED_NAME_ERROR_CODE = "errorCode";
    public static final String SERIALIZED_NAME_SQL_STATE = "sqlState";
    public static final String SERIALIZED_NAME_REASON = "reason";
    public static final String SERIALIZED_NAME_SQL = "sql";
    public static final String SERIALIZED_NAME_VALUE = "value";
    @SerializedName(SERIALIZED_NAME_VALID)
    private Boolean valid;
    @SerializedName(SERIALIZED_NAME_JSONPATH)
    private String jsonpath;
    @SerializedName(SERIALIZED_NAME_ERROR_CODE)
    private Integer errorCode;
    @SerializedName(SERIALIZED_NAME_SQL_STATE)
    private String sqlState;
    @SerializedName(SERIALIZED_NAME_REASON)
    private String reason;
    @SerializedName(SERIALIZED_NAME_SQL)
    private String sql;
    @SerializedName(SERIALIZED_NAME_VALUE)
    private String value;

    public QueryResult() {
    }

    public QueryResult valid(Boolean valid) {

        this.valid = valid;
        return this;
    }

    /**
     * Get valid
     *
     * @return valid
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public Boolean getValid() {
        return valid;
    }

    public void setValid(Boolean valid) {
        this.valid = valid;
    }

    public QueryResult jsonpath(String jsonpath) {

        this.jsonpath = jsonpath;
        return this;
    }

    /**
     * Get jsonpath
     *
     * @return jsonpath
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getJsonpath() {
        return jsonpath;
    }

    public void setJsonpath(String jsonpath) {
        this.jsonpath = jsonpath;
    }

    public QueryResult errorCode(Integer errorCode) {

        this.errorCode = errorCode;
        return this;
    }

    /**
     * Get errorCode
     *
     * @return errorCode
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getErrorCode() {
        return errorCode;
    }

    public void setErrorCode(Integer errorCode) {
        this.errorCode = errorCode;
    }

    public QueryResult sqlState(String sqlState) {

        this.sqlState = sqlState;
        return this;
    }

    /**
     * Get sqlState
     *
     * @return sqlState
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getSqlState() {
        return sqlState;
    }

    public void setSqlState(String sqlState) {
        this.sqlState = sqlState;
    }

    public QueryResult reason(String reason) {

        this.reason = reason;
        return this;
    }

    /**
     * Get reason
     *
     * @return reason
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getReason() {
        return reason;
    }

    public void setReason(String reason) {
        this.reason = reason;
    }

    public QueryResult sql(String sql) {

        this.sql = sql;
        return this;
    }

    /**
     * Get sql
     *
     * @return sql
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getSql() {
        return sql;
    }

    public void setSql(String sql) {
        this.sql = sql;
    }

    public QueryResult value(String value) {

        this.value = value;
        return this;
    }

    /**
     * Get value
     *
     * @return value
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        QueryResult queryResult = (QueryResult) o;
        return Objects.equals(this.valid, queryResult.valid) &&
            Objects.equals(this.jsonpath, queryResult.jsonpath) &&
            Objects.equals(this.errorCode, queryResult.errorCode) &&
            Objects.equals(this.sqlState, queryResult.sqlState) &&
            Objects.equals(this.reason, queryResult.reason) &&
            Objects.equals(this.sql, queryResult.sql) &&
            Objects.equals(this.value, queryResult.value);
    }

    @Override
    public int hashCode() {
        return Objects.hash(valid, jsonpath, errorCode, sqlState, reason, sql, value);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class QueryResult {\n");
        sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
        sb.append("    jsonpath: ").append(toIndentedString(jsonpath)).append("\n");
        sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
        sb.append("    sqlState: ").append(toIndentedString(sqlState)).append("\n");
        sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
        sb.append("    sql: ").append(toIndentedString(sql)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

