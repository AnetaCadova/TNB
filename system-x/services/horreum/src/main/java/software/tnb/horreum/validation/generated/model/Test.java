/*
 * Horreum API
 * Horreum data repository API
 *
 * The version of the OpenAPI document: 0.1-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.tnb.horreum.validation.generated.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * Test
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-12T10:19:43.430893315+02:00[Europe/Rome]")
public class Test {
    public static final String SERIALIZED_NAME_ID = "id";
    public static final String SERIALIZED_NAME_NAME = "name";
    public static final String SERIALIZED_NAME_FOLDER = "folder";
    public static final String SERIALIZED_NAME_DESCRIPTION = "description";
    public static final String SERIALIZED_NAME_OWNER = "owner";
    public static final String SERIALIZED_NAME_ACCESS = "access";
    public static final String SERIALIZED_NAME_TOKENS = "tokens";
    public static final String SERIALIZED_NAME_FINGERPRINT_LABELS = "fingerprintLabels";
    public static final String SERIALIZED_NAME_FINGERPRINT_FILTER = "fingerprintFilter";
    public static final String SERIALIZED_NAME_DEFAULT_VIEW = "defaultView";
    public static final String SERIALIZED_NAME_COMPARE_URL = "compareUrl";
    public static final String SERIALIZED_NAME_TRANSFORMERS = "transformers";
    public static final String SERIALIZED_NAME_NOTIFICATIONS_ENABLED = "notificationsEnabled";
    @SerializedName(SERIALIZED_NAME_ID)
    private Integer id;
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;
    @SerializedName(SERIALIZED_NAME_FOLDER)
    private String folder;
    @SerializedName(SERIALIZED_NAME_DESCRIPTION)
    private String description;
    @SerializedName(SERIALIZED_NAME_OWNER)
    private String owner;
    @SerializedName(SERIALIZED_NAME_ACCESS)
    private Access access;
    @SerializedName(SERIALIZED_NAME_TOKENS)
    private List<TestToken> tokens = null;
    @SerializedName(SERIALIZED_NAME_FINGERPRINT_LABELS)
    private List<String> fingerprintLabels = null;
    @SerializedName(SERIALIZED_NAME_FINGERPRINT_FILTER)
    private String fingerprintFilter;
    @SerializedName(SERIALIZED_NAME_DEFAULT_VIEW)
    private View defaultView;
    @SerializedName(SERIALIZED_NAME_COMPARE_URL)
    private String compareUrl;
    @SerializedName(SERIALIZED_NAME_TRANSFORMERS)
    private List<Transformer> transformers = null;
    @SerializedName(SERIALIZED_NAME_NOTIFICATIONS_ENABLED)
    private Boolean notificationsEnabled;

    public Test() {
    }

    public Test id(Integer id) {

        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Test name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Test folder(String folder) {

        this.folder = folder;
        return this;
    }

    /**
     * Get folder
     *
     * @return folder
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getFolder() {
        return folder;
    }

    public void setFolder(String folder) {
        this.folder = folder;
    }

    public Test description(String description) {

        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Test owner(String owner) {

        this.owner = owner;
        return this;
    }

    /**
     * Get owner
     *
     * @return owner
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public String getOwner() {
        return owner;
    }

    public void setOwner(String owner) {
        this.owner = owner;
    }

    public Test access(Access access) {

        this.access = access;
        return this;
    }

    /**
     * Get access
     *
     * @return access
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(required = true, value = "")

    public Access getAccess() {
        return access;
    }

    public void setAccess(Access access) {
        this.access = access;
    }

    public Test tokens(List<TestToken> tokens) {

        this.tokens = tokens;
        return this;
    }

    public Test addTokensItem(TestToken tokensItem) {
        if (this.tokens == null) {
            this.tokens = new ArrayList<TestToken>();
        }
        this.tokens.add(tokensItem);
        return this;
    }

    /**
     * Get tokens
     *
     * @return tokens
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<TestToken> getTokens() {
        return tokens;
    }

    public void setTokens(List<TestToken> tokens) {
        this.tokens = tokens;
    }

    public Test fingerprintLabels(List<String> fingerprintLabels) {

        this.fingerprintLabels = fingerprintLabels;
        return this;
    }

    public Test addFingerprintLabelsItem(String fingerprintLabelsItem) {
        if (this.fingerprintLabels == null) {
            this.fingerprintLabels = new ArrayList<String>();
        }
        this.fingerprintLabels.add(fingerprintLabelsItem);
        return this;
    }

    /**
     * Get fingerprintLabels
     *
     * @return fingerprintLabels
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getFingerprintLabels() {
        return fingerprintLabels;
    }

    public void setFingerprintLabels(List<String> fingerprintLabels) {
        this.fingerprintLabels = fingerprintLabels;
    }

    public Test fingerprintFilter(String fingerprintFilter) {

        this.fingerprintFilter = fingerprintFilter;
        return this;
    }

    /**
     * Get fingerprintFilter
     *
     * @return fingerprintFilter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getFingerprintFilter() {
        return fingerprintFilter;
    }

    public void setFingerprintFilter(String fingerprintFilter) {
        this.fingerprintFilter = fingerprintFilter;
    }

    public Test defaultView(View defaultView) {

        this.defaultView = defaultView;
        return this;
    }

    /**
     * Get defaultView
     *
     * @return defaultView
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public View getDefaultView() {
        return defaultView;
    }

    public void setDefaultView(View defaultView) {
        this.defaultView = defaultView;
    }

    public Test compareUrl(String compareUrl) {

        this.compareUrl = compareUrl;
        return this;
    }

    /**
     * Get compareUrl
     *
     * @return compareUrl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getCompareUrl() {
        return compareUrl;
    }

    public void setCompareUrl(String compareUrl) {
        this.compareUrl = compareUrl;
    }

    public Test transformers(List<Transformer> transformers) {

        this.transformers = transformers;
        return this;
    }

    public Test addTransformersItem(Transformer transformersItem) {
        if (this.transformers == null) {
            this.transformers = new ArrayList<Transformer>();
        }
        this.transformers.add(transformersItem);
        return this;
    }

    /**
     * Get transformers
     *
     * @return transformers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<Transformer> getTransformers() {
        return transformers;
    }

    public void setTransformers(List<Transformer> transformers) {
        this.transformers = transformers;
    }

    public Test notificationsEnabled(Boolean notificationsEnabled) {

        this.notificationsEnabled = notificationsEnabled;
        return this;
    }

    /**
     * Get notificationsEnabled
     *
     * @return notificationsEnabled
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public Boolean getNotificationsEnabled() {
        return notificationsEnabled;
    }

    public void setNotificationsEnabled(Boolean notificationsEnabled) {
        this.notificationsEnabled = notificationsEnabled;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Test test = (Test) o;
        return Objects.equals(this.id, test.id) &&
            Objects.equals(this.name, test.name) &&
            Objects.equals(this.folder, test.folder) &&
            Objects.equals(this.description, test.description) &&
            Objects.equals(this.owner, test.owner) &&
            Objects.equals(this.access, test.access) &&
            Objects.equals(this.tokens, test.tokens) &&
            Objects.equals(this.fingerprintLabels, test.fingerprintLabels) &&
            Objects.equals(this.fingerprintFilter, test.fingerprintFilter) &&
            Objects.equals(this.defaultView, test.defaultView) &&
            Objects.equals(this.compareUrl, test.compareUrl) &&
            Objects.equals(this.transformers, test.transformers) &&
            Objects.equals(this.notificationsEnabled, test.notificationsEnabled);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, folder, description, owner, access, tokens, fingerprintLabels, fingerprintFilter, defaultView, compareUrl,
            transformers, notificationsEnabled);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Test {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
        sb.append("    access: ").append(toIndentedString(access)).append("\n");
        sb.append("    tokens: ").append(toIndentedString(tokens)).append("\n");
        sb.append("    fingerprintLabels: ").append(toIndentedString(fingerprintLabels)).append("\n");
        sb.append("    fingerprintFilter: ").append(toIndentedString(fingerprintFilter)).append("\n");
        sb.append("    defaultView: ").append(toIndentedString(defaultView)).append("\n");
        sb.append("    compareUrl: ").append(toIndentedString(compareUrl)).append("\n");
        sb.append("    transformers: ").append(toIndentedString(transformers)).append("\n");
        sb.append("    notificationsEnabled: ").append(toIndentedString(notificationsEnabled)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

