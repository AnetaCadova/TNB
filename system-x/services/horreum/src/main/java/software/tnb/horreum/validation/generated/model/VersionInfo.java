/*
 * Horreum API
 * Horreum data repository API
 *
 * The version of the OpenAPI document: 0.1-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.tnb.horreum.validation.generated.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * VersionInfo
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-12T10:19:43.430893315+02:00[Europe/Rome]")
public class VersionInfo {
    public static final String SERIALIZED_NAME_VERSION = "version";
    public static final String SERIALIZED_NAME_COMMIT = "commit";
    public static final String SERIALIZED_NAME_BUILD_TIMESTAMP = "buildTimestamp";
    public static final String SERIALIZED_NAME_START_TIMESTAMP = "startTimestamp";
    @SerializedName(SERIALIZED_NAME_VERSION)
    private String version;
    @SerializedName(SERIALIZED_NAME_COMMIT)
    private String commit;
    @SerializedName(SERIALIZED_NAME_BUILD_TIMESTAMP)
    private Long buildTimestamp;
    @SerializedName(SERIALIZED_NAME_START_TIMESTAMP)
    private Long startTimestamp;

    public VersionInfo() {
    }

    public VersionInfo version(String version) {

        this.version = version;
        return this;
    }

    /**
     * Get version
     *
     * @return version
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public VersionInfo commit(String commit) {

        this.commit = commit;
        return this;
    }

    /**
     * Get commit
     *
     * @return commit
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public String getCommit() {
        return commit;
    }

    public void setCommit(String commit) {
        this.commit = commit;
    }

    public VersionInfo buildTimestamp(Long buildTimestamp) {

        this.buildTimestamp = buildTimestamp;
        return this;
    }

    /**
     * Get buildTimestamp
     *
     * @return buildTimestamp
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public Long getBuildTimestamp() {
        return buildTimestamp;
    }

    public void setBuildTimestamp(Long buildTimestamp) {
        this.buildTimestamp = buildTimestamp;
    }

    public VersionInfo startTimestamp(Long startTimestamp) {

        this.startTimestamp = startTimestamp;
        return this;
    }

    /**
     * Get startTimestamp
     *
     * @return startTimestamp
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")

    public Long getStartTimestamp() {
        return startTimestamp;
    }

    public void setStartTimestamp(Long startTimestamp) {
        this.startTimestamp = startTimestamp;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VersionInfo versionInfo = (VersionInfo) o;
        return Objects.equals(this.version, versionInfo.version) &&
            Objects.equals(this.commit, versionInfo.commit) &&
            Objects.equals(this.buildTimestamp, versionInfo.buildTimestamp) &&
            Objects.equals(this.startTimestamp, versionInfo.startTimestamp);
    }

    @Override
    public int hashCode() {
        return Objects.hash(version, commit, buildTimestamp, startTimestamp);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class VersionInfo {\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("    commit: ").append(toIndentedString(commit)).append("\n");
        sb.append("    buildTimestamp: ").append(toIndentedString(buildTimestamp)).append("\n");
        sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

