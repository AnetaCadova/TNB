/*
 * Horreum API
 * Horreum data repository API
 *
 * The version of the OpenAPI document: 0.1-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package software.tnb.horreum.validation.generated.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * AnnotationQuery
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-12T10:19:43.430893315+02:00[Europe/Rome]")
public class AnnotationQuery {
    public static final String SERIALIZED_NAME_NAME = "name";
    public static final String SERIALIZED_NAME_DATASOURCE = "datasource";
    public static final String SERIALIZED_NAME_ICON_COLOR = "iconColor";
    public static final String SERIALIZED_NAME_ENABLE = "enable";
    public static final String SERIALIZED_NAME_QUERY = "query";
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;
    @SerializedName(SERIALIZED_NAME_DATASOURCE)
    private String datasource;
    @SerializedName(SERIALIZED_NAME_ICON_COLOR)
    private String iconColor;
    @SerializedName(SERIALIZED_NAME_ENABLE)
    private Boolean enable;
    @SerializedName(SERIALIZED_NAME_QUERY)
    private String query;

    public AnnotationQuery() {
    }

    public AnnotationQuery name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public AnnotationQuery datasource(String datasource) {

        this.datasource = datasource;
        return this;
    }

    /**
     * Get datasource
     *
     * @return datasource
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getDatasource() {
        return datasource;
    }

    public void setDatasource(String datasource) {
        this.datasource = datasource;
    }

    public AnnotationQuery iconColor(String iconColor) {

        this.iconColor = iconColor;
        return this;
    }

    /**
     * Get iconColor
     *
     * @return iconColor
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getIconColor() {
        return iconColor;
    }

    public void setIconColor(String iconColor) {
        this.iconColor = iconColor;
    }

    public AnnotationQuery enable(Boolean enable) {

        this.enable = enable;
        return this;
    }

    /**
     * Get enable
     *
     * @return enable
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getEnable() {
        return enable;
    }

    public void setEnable(Boolean enable) {
        this.enable = enable;
    }

    public AnnotationQuery query(String query) {

        this.query = query;
        return this;
    }

    /**
     * Get query
     *
     * @return query
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getQuery() {
        return query;
    }

    public void setQuery(String query) {
        this.query = query;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AnnotationQuery annotationQuery = (AnnotationQuery) o;
        return Objects.equals(this.name, annotationQuery.name) &&
            Objects.equals(this.datasource, annotationQuery.datasource) &&
            Objects.equals(this.iconColor, annotationQuery.iconColor) &&
            Objects.equals(this.enable, annotationQuery.enable) &&
            Objects.equals(this.query, annotationQuery.query);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, datasource, iconColor, enable, query);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AnnotationQuery {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    datasource: ").append(toIndentedString(datasource)).append("\n");
        sb.append("    iconColor: ").append(toIndentedString(iconColor)).append("\n");
        sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
        sb.append("    query: ").append(toIndentedString(query)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

