/*
 * Hyperfoil Controller API
 * Hyperfoil Controller API
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package software.tnb.hyperfoil.validation.generated.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

/**
 * Phase
 */
public class Phase {
    public static final String SERIALIZED_NAME_NAME = "name";
    public static final String SERIALIZED_NAME_STATUS = "status";
    public static final String SERIALIZED_NAME_TYPE = "type";
    public static final String SERIALIZED_NAME_STARTED = "started";
    public static final String SERIALIZED_NAME_REMAINING = "remaining";
    public static final String SERIALIZED_NAME_COMPLETED = "completed";
    public static final String SERIALIZED_NAME_FAILED = "failed";
    public static final String SERIALIZED_NAME_TOTAL_DURATION = "totalDuration";
    public static final String SERIALIZED_NAME_DESCRIPTION = "description";
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;
    @SerializedName(SERIALIZED_NAME_STATUS)
    private String status;
    @SerializedName(SERIALIZED_NAME_TYPE)
    private String type;
    @SerializedName(SERIALIZED_NAME_STARTED)
    private String started;
    @SerializedName(SERIALIZED_NAME_REMAINING)
    private String remaining;
    @SerializedName(SERIALIZED_NAME_COMPLETED)
    private String completed;
    @SerializedName(SERIALIZED_NAME_FAILED)
    private Boolean failed;
    @SerializedName(SERIALIZED_NAME_TOTAL_DURATION)
    private String totalDuration;
    @SerializedName(SERIALIZED_NAME_DESCRIPTION)
    private String description;

    public Phase() {
    }

    public Phase name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Phase status(String status) {

        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     **/
    

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public Phase type(String type) {

        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public Phase started(String started) {

        this.started = started;
        return this;
    }

    /**
     * Get started
     *
     * @return started
     **/
    

    public String getStarted() {
        return started;
    }

    public void setStarted(String started) {
        this.started = started;
    }

    public Phase remaining(String remaining) {

        this.remaining = remaining;
        return this;
    }

    /**
     * Get remaining
     *
     * @return remaining
     **/
    

    public String getRemaining() {
        return remaining;
    }

    public void setRemaining(String remaining) {
        this.remaining = remaining;
    }

    public Phase completed(String completed) {

        this.completed = completed;
        return this;
    }

    /**
     * Get completed
     *
     * @return completed
     **/
    

    public String getCompleted() {
        return completed;
    }

    public void setCompleted(String completed) {
        this.completed = completed;
    }

    public Phase failed(Boolean failed) {

        this.failed = failed;
        return this;
    }

    /**
     * Get failed
     *
     * @return failed
     **/
    

    public Boolean getFailed() {
        return failed;
    }

    public void setFailed(Boolean failed) {
        this.failed = failed;
    }

    public Phase totalDuration(String totalDuration) {

        this.totalDuration = totalDuration;
        return this;
    }

    /**
     * Get totalDuration
     *
     * @return totalDuration
     **/
    

    public String getTotalDuration() {
        return totalDuration;
    }

    public void setTotalDuration(String totalDuration) {
        this.totalDuration = totalDuration;
    }

    public Phase description(String description) {

        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Phase phase = (Phase) o;
        return Objects.equals(this.name, phase.name)
            && Objects.equals(this.status, phase.status)
            && Objects.equals(this.type, phase.type)
            && Objects.equals(this.started, phase.started)
            && Objects.equals(this.remaining, phase.remaining)
            && Objects.equals(this.completed, phase.completed)
            && Objects.equals(this.failed, phase.failed)
            && Objects.equals(this.totalDuration, phase.totalDuration)
            && Objects.equals(this.description, phase.description);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, status, type, started, remaining, completed, failed, totalDuration, description);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Phase {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    started: ").append(toIndentedString(started)).append("\n");
        sb.append("    remaining: ").append(toIndentedString(remaining)).append("\n");
        sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
        sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
        sb.append("    totalDuration: ").append(toIndentedString(totalDuration)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

